- name: Install required packages
  apt:
    name: "{{ required_pkgs }}"
    state: present
    update_cache: yes

- name: Upgrade pip
  pip:
    name: pip
    state: latest
    executable: pip3

- name: Install pip packages for aws
  pip:
    name: awscli
    executable: pip3
  when: "'aws' in group_names"

- name: Remove PyYAML package
  package:
    name: python3-yaml
    state: absent
  when: "'vexxhost' in group_names"

- name: Install pip packages for vexx
  pip:
    name:
      - python-openstackclient==5.4.0
      - cryptography==3.3.1
      - python-glanceclient>=2.8.0
      - python-novaclient
    executable: pip3
  when: "'vexxhost' in group_names"

- name: Add user jenkins
  user:
    name: "{{ jenkins_user }}"
    shell: "/bin/bash"

- name: "Make {{ item }}/.ssh directory"
  file:
    path: /home/{{ item }}/.ssh
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: "0700"
    state: directory
  with_items:
    - jenkins_user
    - ansible_user

- name: "Store {{ item.dst }} for user {{ item.user }}"
  copy:
    src: "{{ item.src }}"
    dest: "/home/{{ item.user }}/{{ item.dst }}"
    owner: "{{ item.user }}"
    group: "{{ item.user }}"
    mode: "0600"
  with_items:
    - { src: "ssh_config", dst: '.ssh/config', user: "{{ jenkins_user }}" }
    - { src: "ssh_config", dst: '.ssh/config', user: "{{ ansible_user }}" }
    - { src: "{{ ssh_keys_dir }}/workers_rsa", dst: '.ssh/workers', user: "{{ ansible_user }}" }

- name: Read a keypair for slaves
  set_fact:
    jenkins_slave_pubkey: "{{ lookup('file', '{{ ssh_keys_dir }}/jenkins_slave_rsa.pub') }}"

- name: Add trusted ssh pubkeys to jenkins authorized_keys file
  blockinfile:
    dest: "/home/{{ jenkins_user }}/.ssh/authorized_keys"
    create: yes
    marker: "# {mark} Ansible managed default keys"
    block: |
      {{ jenkins_slave_pubkey }}
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: "0600"

- name: Ensure group "docker" exists
  group:
    name: docker
    state: present

- name: adding existing user jenkins to group docker
  user:
    name: jenkins
    group: docker
    append: yes

- name: Add user "ansibleuser" to sudo
  lineinfile:
    path: /etc/sudoers.d/91-jenkins
    line: 'jenkins ALL=(ALL) NOPASSWD: /usr/bin/docker'
    state: present
    mode: 0440
    create: yes
    validate: 'visudo -cf %s'

- name: check if packer exists
  stat:
    path: /usr/local/bin/packer
    get_checksum: no
  register: packer_state

- name: check if rules file exists
  command: "/usr/local/bin/packer --version"
  register: packer_version
  ignore_errors: True
  when: packer_state.stat.exists == True and packer_state.stat.executable == True

- name: Create temporary download directory
  tempfile:
    state: directory
  register: download_dir
  when: (packer_state.stat.exists == False) or (packer_version.stdout != packer_ver)

- name: Download packer
  get_url:
    url: https://releases.hashicorp.com/packer/{{packer_ver}}/packer_{{packer_ver}}_linux_amd64.zip
    dest: "{{download_dir.path}}/packer_{{packer_ver}}_linux_amd64.zip"
  when: (packer_state.stat.exists == False) or (packer_version.stdout != packer_ver)

- name: Unarchive a file that is already on the remote machine
  unarchive:
    src: "{{download_dir.path}}/packer_{{packer_ver}}_linux_amd64.zip"
    dest: /usr/local/bin
    remote_src: yes
  when: (packer_state.stat.exists == False) or (packer_version.stdout != packer_ver)
