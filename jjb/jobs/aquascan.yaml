- job:
    name: "aquascan"
    description: "scan published containers for security vulnerabilities"
    defaults: global-with-creds-for-pipeline
    concurrent: false
    properties:
      - build-discarder:
          num-to-keep: 60
    scm:
      - tf-jenkins
    wrappers:
      - credentials-binding:
          - username-password-separated:
              credential-id: aquasec
              username: AQUASEC_USERNAME
              password: AQUASEC_PASSWORD
          - username-password-separated:
              credential-id: aquascanner
              username: AQUASEC_SCANNER_USERNAME
              password: AQUASEC_SCANNER_PASSWORD
    builders:
      - copyartifact:
          project: ${PIPELINE_NAME}
          filter: "global.env,*.$JOB_RND.env"
          which-build: upstream-build
          optional: true
      - shell: |
          source "$WORKSPACE/global.env"
          desc="Pipeline: ${PIPELINE_NAME}-${PIPELINE_NUMBER}  Random: ${JOB_RND}<br>Job logs: <a href=\"${LOGS_URL}/${STREAM}\">${LOGS_URL}/${STREAM}</a>"
          echo "DESCRIPTION $desc"
      - description-setter:
          regexp: "DESCRIPTION (.*)"
      - shell: |
          set -eo pipefail
          source "$WORKSPACE/global.env"
          ./src/tungstenfabric/tf-jenkins/infra/gerrit/apply_patchsets.sh ./src tungstenfabric/tf-jenkins ./patchsets-info.json
      - shell: |
          set -eo pipefail
          source "$WORKSPACE/global.env"
          source "${WORKSPACE}/deps.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          # do it as a latest source to override all exports
          source "${WORKSPACE}/vars.${JOB_NAME}.${JOB_RND}.env" || /bin/true
          export FULL_LOGS_PATH="${LOGS_PATH}/${STREAM}"
          export FULL_LOGS_URL="${LOGS_URL}/${STREAM}"
          # main run
          ./src/tungstenfabric/tf-jenkins/jobs/aquascan/run.sh || res=1
          # collect logs
          ./src/tungstenfabric/tf-jenkins/jobs/aquascan/collect_logs.sh
          exit $res
    publishers:
        - archive:
            artifacts: '*.env'
