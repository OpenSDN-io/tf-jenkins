---
- name: install python modules
  pip:
    name: "{{ item }}"
  with_items:
    - influxdb

- name: create required directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    mode: 0755
  with_items:
    - /opt/monitoring

- name: copy files
  copy:
    src: "files/{{ item }}"
    dest: "/opt/monitoring/{{ item }}"
    mode: 0644
  with_items:
    - Dockerfile
    - Dockerfile.fixvars
    - nginx-default.conf
    - app

- name: copy script
  copy:
    src: "files/{{ item }}"
    dest: "/opt/monitoring/{{ item }}"
    mode: 0755
  with_items:
    - docker-network.sh

- name: apply configuration
  template:
    src: "{{ item }}.j2"
    dest: "/opt/monitoring/{{ item }}"
    mode: 0644
  with_items:
    - dashboard.json
    - fluent.conf
    - docker-compose.yaml

- name: start apps
  docker_service:
    project_src: /opt/monitoring

- name: Pause play until influxdb becomes reachable
  uri:
    url: "http://localhost:8086/ping"
    follow_redirects: none
    method: GET
    status_code: 204
  register: _result
  until: _result.status == 204
  retries: 10
  delay: 5

- name: Create database
  influxdb_database:
    hostname: "localhost"
    database_name: "{{ database }}"
    udp_port: 4444 # fixed in later ansible versions

- name: Change grafana admin password
  uri:
    url: "http://localhost:3000/api/user/password"
    url_username: admin
    url_password: admin
    force_basic_auth: yes
    method: PUT
    body_format: json
    body: #'{"oldPassword": "admin", "newPassword": "{{ grafana_password }}"}'
      oldPassword: "admin"
      newPassword: "{{ grafana_password }}"
    status_code:
      - 200
      - 401 # The password may be changed already

- name: Check if datasource exists
  uri:
    url: "http://localhost:3000/api/datasources/name/InfluxDB"
    url_username: admin
    url_password: "{{ grafana_password }}"
    force_basic_auth: yes
    status_code:
      - 200
      - 404
  register: datasource

- name: Create influxdb datasource
  uri:
    url: "http://localhost:3000/api/datasources"
    url_username: admin
    url_password: "{{ grafana_password }}"
    force_basic_auth: yes
    method: POST
    body_format: json
    body:
      name: InfluxDB
      type: influxdb
      url: http://influxdb:8086
      access: proxy
      database: "{{ database }}"
      status_code:
        - 200
        - 409 # if datasource exists
  when: datasource.status == 404

- name: Create dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    user: "admin"
    password: "{{ grafana_password }}"
    method: POST
    force_basic_auth: yes
    status_code: 200
    body_format: json
    body: "{\"overwrite\": true, \"dashboard\": {{ lookup('file', 'dashboard.json') }} }"

- name: Connect monitoring to proxy
  shell: /opt/monitoring/docker-network.sh
