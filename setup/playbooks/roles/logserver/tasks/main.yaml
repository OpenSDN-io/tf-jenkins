---

- name: Ensure logserver group exists
  group:
    name: logserver
    state: present
    gid: 9998

- name: Ensure logserver user exists
  user:
    name: "logserver"
    state: present
    uid: 9998
    group: logserver
    append: yes

- name: create required directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    mode: 0755
    owner: logserver
    group: logserver
  with_items:
    - "{{ logserver_docker_directory }}"
    - /home/logserver/.ssh

# for now log server is placed somewhere and accessed from executor with logserver user
- name: create logserver data directory
  file:
    path: "{{ logserver_data_directory }}"
    state: directory
    owner: logserver
    group: logserver
    recurse: yes
    mode: 0775

- name: "collect {{ ssh_keys_dir }}/logserver_rsa.pub' ssh key"
  set_fact:
    logserver_pubkey: "{{ lookup('file', '{{ ssh_keys_dir }}/logserver_rsa.pub') }}"

- name: add logserver public ssh key to logserver's authorized_keys
  shell: "echo {{ logserver_pubkey }} >> /home/logserver/.ssh/authorized_keys"

- name: fix /home/logserver/.ssh/authorized_keys security
  file:
    path: /home/logserver/.ssh/authorized_keys
    owner: logserver
    group: logserver
    mode: 0644

- name: copy logserver configuration files
  copy:
    src: "httpd.conf"
    dest: "{{ logserver_docker_directory }}/httpd.conf"
    force: true
    owner: logserver
    group: logserver

- name: apply logserver compose file
  template:
    src: docker-compose.yaml.j2
    dest: "{{ logserver_docker_directory }}/docker-compose.yaml"
    mode: 0644

- name: start logserver
  docker_service:
    project_src: "{{ logserver_docker_directory }}"

- name: logserver log rotate task
  template:
    src: ci-log-rotate.j2
    dest: /etc/cron.daily/ci-log-rotate
    mode: 0755
